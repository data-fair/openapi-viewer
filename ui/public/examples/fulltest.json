{
  "openapi": "3.1.0",
  "info": {
    "title": "Titre de l'API",
    "description": "Ceci est un _exemple complet_ de documentation d'API selon la norme OpenAPI 3. La description peut contenir du **markdown**, tel que du texte en **gras** ou _italique_, des listes, des liens, des images, et bien plus encore. \n\n Cette API permet de rien gérer avec des rien, des rien et des rien. Vous ne pouvez pas tester les différents points de terminaison pour comprendre leur fonctionnement.\n\nExemple de lien dans une description [https://example.com/docs](https://example.com/docs).",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Équipe de support",
      "url": "https://example.com/support",
      "email": "contact@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Serveur principal de l'API"
    },
    {
      "url": "https://staging-api.example.com/v1",
      "description": "Serveur de préproduction"
    }
  ],
  "tags": [
    {
      "name": "b1erTag",
      "description": "Ce tag doit être le premier dans la liste des tags"
    },
    {
      "name": "a2emeTag",
      "description": "Ce tag doit être le deuxième dans la liste des tags"
    },
    {
      "name": "Tag sans operations",
      "description": "Ce tag ne contient pas d'opérations"
    },
    {
      "name": "Tag avec doc externe",
      "description": "Ce tag contient une documentation externe",
      "externalDocs": {
        "description": "Documentation externe pour ce tag",
        "url": "https://example.com/docs"
      }
    }
  ],
  "paths": {
    "/RouteA": {
      "get": {
        "summary": "Obtenir les informations de la RouteA",
        "description": "Cette route permet de récupérer les informations disponibles pour la route A. Elle peut être utilisée pour interroger l'API et obtenir des données spécifiques.",
        "operationId": "getRouteA",
        "tags": [
          "TagA"
        ],
        "responses": {
          "200": {
            "description": "Réponse réussie avec les données de la RouteA",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseA"
                }
              }
            }
          },
          "404": {
            "description": "Non trouvé, les données demandées ne sont pas disponibles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/RouteAC": {
      "post": {
        "summary": "Créer une ressource via la RouteAC",
        "description": "Cette route possède a la fois le TagA et le TagC",
        "operationId": "createRouteAC",
        "tags": [
          "TagA",
          "TagC"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestC"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ressource créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseC"
                }
              }
            }
          },
          "500": {
            "description": "Erreur interne du serveur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/RouteAllMethods": {
      "get": {
        "summary": "Obtenir les informations de la RouteAllMethods",
        "description": "Cette route permet de récupérer les informations disponibles pour la route avec toutes les méthodes.",
        "operationId": "getRouteAllMethods",
        "tags": [
          "TagAllMethods"
        ],
        "responses": {
          "200": {
            "description": "Réponse réussie avec les données de la RouteAllMethods",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer une ressource via la RouteAllMethods",
        "description": "Cette route permet de créer une ressource en utilisant la méthode POST.",
        "operationId": "postRouteAllMethods",
        "tags": [
          "TagAllMethods"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestC"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ressource créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseC"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Mettre à jour une ressource via la RouteAllMethods",
        "description": "Cette route permet de mettre à jour une ressource en utilisant la méthode PUT.",
        "operationId": "putRouteAllMethods",
        "tags": [
          "TagAllMethods"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestC"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ressource mise à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseC"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifier partiellement une ressource via la RouteAllMethods",
        "description": "Cette route permet de modifier partiellement une ressource en utilisant la méthode PATCH.",
        "operationId": "patchRouteAllMethods",
        "tags": [
          "TagAllMethods"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestC"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ressource modifiée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseC"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Supprimer une ressource via la RouteAllMethods",
        "description": "Cette route permet de supprimer une ressource en utilisant la méthode DELETE.",
        "operationId": "deleteRouteAllMethods",
        "tags": [
          "TagAllMethods"
        ],
        "responses": {
          "204": {
        "description": "Ressource supprimée avec succès"
          }
        }
      },
      "options": {
        "summary": "Obtenir les options de la RouteAllMethods",
        "description": "Cette route permet d'obtenir les options de communication disponibles pour la ressource.",
        "operationId": "optionsRouteAllMethods",
        "tags": [
          "TagAllMethods"
        ],
        "responses": {
          "200": {
        "description": "Options récupérées avec succès",
        "content": {
          "application/json": {
            "schema": {
          "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
          }
        }
      },
      "head": {
        "summary": "Obtenir les en-têtes de la RouteAllMethods",
        "description": "Cette route permet d'obtenir les en-têtes de la ressource sans le corps de la réponse.",
        "operationId": "headRouteAllMethods",
        "tags": [
          "TagAllMethods"
        ],
        "responses": {
          "200": {
        "description": "En-têtes récupérées avec succès",
        "content": {
          "application/json": {
            "schema": {
          "$ref": "#/components/schemas/GeneralResponse"
            }
          }
        }
          }
        }
      }
    },
    "/RouteSansOperationId": {
      "get": {
        "tags": [
          "TagA"
        ],
        "summary": "Obtenir des données sans opération ID",
        "description": "Cette route permet de récupérer des informations générales sans l'attribution d'un identifiant d'opération spécifique. Elle est plus générique et peut être utilisée pour obtenir des données sans manipulation complexe.",
        "responses": {
          "200": {
            "description": "Données récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              }
            }
          }
        }
      }
    },
    "/RouteSansTag": {
      "get": {
        "summary": "Cette route n'a pas de tag",
        "operationId": "getRouteSansTag",
        "responses": {
          "200": {
            "description": "Données récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ResponseA": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Les données de la RouteA"
          }
        }
      },
      "ResponseB": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "Les détails de la RouteB"
          }
        }
      },
      "ResponseC": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Le statut de la création"
          }
        }
      },
      "RequestC": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de la ressource à créer"
          },
          "value": {
            "type": "integer",
            "description": "Valeur associée à la ressource"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "GeneralResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message générique retourné par la route"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code d'erreur HTTP"
          },
          "message": {
            "type": "string",
            "description": "Message d'erreur"
          }
        }
      }
    }
  }
}